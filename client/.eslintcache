[{"C:\\Users\\ryans\\dmc\\client\\src\\index.js":"1","C:\\Users\\ryans\\dmc\\client\\src\\App.js":"2","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Landing.js":"3","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Thread.js":"4","C:\\Users\\ryans\\dmc\\client\\src\\components\\BackBtn\\index.js":"5","C:\\Users\\ryans\\dmc\\client\\src\\components\\HomeBtn\\index.js":"6","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Wishlist.js":"7","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Inventory.js":"8","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Login.js":"9","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Projects.js":"10","C:\\Users\\ryans\\dmc\\client\\src\\components\\SmThread\\index.js":"11","C:\\Users\\ryans\\dmc\\client\\src\\components\\TabBar\\index.js":"12","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Entry.js":"13","C:\\Users\\ryans\\dmc\\client\\src\\utils\\API.js":"14","C:\\Users\\ryans\\dmc\\client\\src\\components\\Results\\index.js":"15","C:\\Users\\ryans\\dmc\\client\\src\\utils\\setAuthToken.js":"16","C:\\Users\\ryans\\dmc\\client\\src\\utils\\UserContext.js":"17","C:\\Users\\ryans\\dmc\\client\\src\\utils\\AuthContext.js":"18","C:\\Users\\ryans\\dmc\\client\\src\\utils\\ThreadContext.js":"19","C:\\Users\\ryans\\dmc\\client\\src\\components\\SearchBox\\index.js":"20"},{"size":484,"mtime":1611992681943,"results":"21","hashOfConfig":"22"},{"size":2671,"mtime":1612657421188,"results":"23","hashOfConfig":"22"},{"size":3069,"mtime":1612993847348,"results":"24","hashOfConfig":"22"},{"size":9338,"mtime":1613593424701,"results":"25","hashOfConfig":"22"},{"size":793,"mtime":1612907941748,"results":"26","hashOfConfig":"22"},{"size":691,"mtime":1612657226017,"results":"27","hashOfConfig":"22"},{"size":2296,"mtime":1613593334833,"results":"28","hashOfConfig":"22"},{"size":3755,"mtime":1613593235619,"results":"29","hashOfConfig":"22"},{"size":6981,"mtime":1612653069212,"results":"30","hashOfConfig":"22"},{"size":316,"mtime":1612128505625,"results":"31","hashOfConfig":"22"},{"size":1663,"mtime":1612380641652,"results":"32","hashOfConfig":"22"},{"size":1582,"mtime":1612380779519,"results":"33","hashOfConfig":"22"},{"size":2946,"mtime":1612507088295,"results":"34","hashOfConfig":"22"},{"size":1452,"mtime":1612904088905,"results":"35","hashOfConfig":"22"},{"size":1043,"mtime":1612906469868,"results":"36","hashOfConfig":"22"},{"size":265,"mtime":1612221325766,"results":"37","hashOfConfig":"22"},{"size":132,"mtime":1612222686800,"results":"38","hashOfConfig":"22"},{"size":302,"mtime":1612221204732,"results":"39","hashOfConfig":"22"},{"size":139,"mtime":1612655163987,"results":"40","hashOfConfig":"22"},{"size":824,"mtime":1612987806144,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kzhpc7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\ryans\\dmc\\client\\src\\index.js",[],["88","89"],"C:\\Users\\ryans\\dmc\\client\\src\\App.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\pages\\Landing.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\pages\\Thread.js",["90"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport API from \"../utils/API\";\r\n\r\n// Material UI\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Card, CardActions, CardContent, Slide, Snackbar } from '@material-ui/core';\r\nimport { Box, Button, IconButton, Slider } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n// Icons\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\n\r\n// Components\r\nimport BackBtn from \"../components/BackBtn\";\r\nimport HomeBtn from \"../components/HomeBtn\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 275,\r\n        margin: \"auto\",\r\n        textAlign: \"center\",\r\n        borderRadius: \"10px\"\r\n    },\r\n    bottom: {\r\n        marginBottom: \"35px\"\r\n    },\r\n    auto: {\r\n        margin: \"auto\"\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    counter: {\r\n        marginBlockStart: 0,\r\n        marginBlockEnd: 0,\r\n    },\r\n    counterBtn: {\r\n        borderRadius: \"1em\",\r\n        marginLeft: \"20px\",\r\n        marginRight: \"20px\"\r\n    },\r\n    star: {\r\n        position: \"absolute\",\r\n        fontSize: \"40px\",\r\n        bottom: 5,\r\n        right: 5,\r\n        color: \"white\",\r\n    },\r\n    favStar: {\r\n        position: \"absolute\",\r\n        fontSize: \"40px\",\r\n        bottom: 5,\r\n        right: 5,\r\n        color: \"#d4af37\",\r\n    },\r\n    color: {\r\n        position: \"relative\",\r\n        margin: \"auto\",\r\n        width: \"60vw\",\r\n        height: \"60vw\",\r\n        backgroundColor: \"#fff\"\r\n    }\r\n});\r\n\r\n// Slider Component\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        color: '#aebedf',\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 10,\r\n        borderRadius: 5,\r\n    },\r\n    rail: {\r\n        height: 10,\r\n        borderRadius: 5,\r\n    },\r\n})(Slider);\r\n\r\nfunction Thread(props) {\r\n    const { tColor } = props.location.state;\r\n\r\n    const [color, setColor] = useState({\r\n        num: tColor.num,\r\n        name: tColor.name,\r\n        color: tColor.color,\r\n        count: tColor.count || 0,\r\n        partial: tColor.partial || 0,\r\n        note: tColor.note || \"\",\r\n        favorite: tColor.favorite || false,\r\n        wishlist: tColor.wishlist || false,\r\n        wishCount: tColor.wishCount || 0,\r\n        brand: \"DMC\"\r\n    });\r\n    const [open, setOpen] = useState(false);\r\n\r\n    // Prevents [count, partial] useEffect on initial mount\r\n    const isInitialMount = useRef(true);\r\n\r\n    // If owned/favorite are clicked from all inventory, it does not populate info without the useEffect...\r\n\r\n    // Attemts to grab thread info from user's drawer to populate color hook\r\n    useEffect(() => {\r\n        const getColor = async () => {\r\n            try {\r\n                const query = document.location.search;\r\n                const colorId = query.split(\"=\")[1];\r\n\r\n                if (colorId) {\r\n                    const currentThread = await API.getOne(colorId);\r\n                    if (currentThread.data) {\r\n                        setColor(currentThread.data)\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        getColor();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n        } else {\r\n            if (color.count > 0 || color.partial > 0) {\r\n                API.addOne(setModel());\r\n            } else {\r\n                API.deleteOne(color.num);\r\n            }\r\n        }\r\n    }, [color.count, color.partial])\r\n\r\n    const classes = useStyles();\r\n\r\n    const onChange = (e, val) => setColor({ ...color, partial: val });\r\n\r\n    // Returns empty or filled star based on favorite value\r\n    const checkFav = () => {\r\n        // Have to manually set favorite since setColor does not execute in time\r\n        if (color.favorite) {\r\n            return <StarIcon\r\n                className={classes.favStar}\r\n                onClick={async () => {\r\n                    let favThread = setModel();\r\n                    favThread = ({ ...favThread, favorite: false })\r\n                    setColor({ ...color, favorite: !color.favorite });\r\n                    API.addOne(favThread);\r\n                }}\r\n            />\r\n        } else if (!color.favorite) {\r\n            return <StarOutlinedIcon\r\n                className={classes.star}\r\n                onClick={async () => {\r\n                    let favThread = setModel();\r\n                    favThread = ({ ...favThread, favorite: true })\r\n                    setColor({ ...color, favorite: !color.favorite });\r\n                    API.addOne(favThread);\r\n                }}\r\n            />\r\n        }\r\n    }\r\n\r\n    // Handle \"clickaway\" event for Snackbar\r\n    const handleClose = (e, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    // Constructs object for storage in database\r\n    const setModel = () => {\r\n        const newThread = {\r\n            num: color.num,\r\n            name: color.name,\r\n            color: color.color,\r\n            partial: color.partial,\r\n            count: color.count,\r\n            note: color.note,\r\n            favorite: color.favorite,\r\n            wishlist: color.wishlist,\r\n            wishCount: color.wishCount,\r\n            brand: \"DMC\"\r\n        }\r\n        return newThread;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <BackBtn />\r\n            <HomeBtn />\r\n\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Box className={classes.bottom}>\r\n                        <Box className={classes.color} style={{ backgroundColor: color.color }}>\r\n                            {checkFav()}\r\n                        </Box>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {color.name}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        <Typography component=\"p\">Partial Quantity</Typography>\r\n                        <PrettoSlider\r\n                            // value={partial}  This sets the slider on an owned thread, but disables sliding\r\n                            valueLabelDisplay=\"auto\"\r\n                            aria-label=\"pretto slider\"\r\n                            defaultValue={color.partial}\r\n                            step={25}\r\n                            onChangeCommitted={(e, val) => onChange(e, val)}\r\n                        />\r\n                        <Typography component=\"p\">Change Full Quantity</Typography>\r\n                        <Box className={classes.center}>\r\n                            <IconButton\r\n                                className={classes.counterBtn}\r\n                                onClick={() => setColor({ ...color, count: color.count + 1 })}\r\n                            >\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                            <h1 className={classes.counter}>{color.count}</h1>\r\n                            <IconButton\r\n                                className={classes.counterBtn}\r\n                                onClick={() => (color.count > 0) ? setColor({ ...color, count: color.count - 1 }) : setColor({ ...color, count: 0 })}\r\n                            >\r\n                                <RemoveIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button\r\n                        className={classes.auto}\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            API.addOne({ ...color, wishlist: true });\r\n                            setColor({ ...color, wishlist: !color.wishlist });\r\n                            setOpen(true);\r\n                        }}\r\n                        disabled={color.wishlist ? true : false}\r\n                    >\r\n                        {color.wishlist ? \"Wishlisted\" : \"Add to Wishlist\"}\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                TransitionComponent={Slide}\r\n                onClose={handleClose}\r\n            >\r\n                <MuiAlert\r\n                    elevation={20}\r\n                    variant=\"filled\"\r\n                    onClose={handleClose}\r\n                    severity=\"success\"\r\n                >\r\n                    Added to Wishlist\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Thread;","C:\\Users\\ryans\\dmc\\client\\src\\components\\BackBtn\\index.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\components\\HomeBtn\\index.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\pages\\Wishlist.js",["91","92"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport API from \"../utils/API\";\r\n\r\n// Material UI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\r\n\r\n// Components\r\nimport BackBtn from \"../components/BackBtn\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport HomeBtn from \"../components/HomeBtn\";\r\nimport Results from \"../components/Results\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttons: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: 60\r\n    },\r\n    white: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: 4\r\n    },\r\n    topM: {\r\n        marginTop: 7\r\n    }\r\n}));\r\n\r\nfunction Wishlist() {\r\n    const [wishes, setWishes] = useState([]);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [search, setSearch] = useState();\r\n\r\n    const isInitialMount = useRef(true);\r\n\r\n    // Loads wishlist for current user on page load\r\n    useEffect(() => {\r\n        const getThreads = async () => {\r\n            try {\r\n                const wishResponse = await API.getWishes();\r\n                setWishes(wishResponse.data);\r\n                setFiltered(wishResponse.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        getThreads();\r\n    }, []);\r\n\r\n    // Checks for changes on search hook and filters wishlist\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n        } else {\r\n            const newWishes = wishes.filter((thread) => {\r\n                return thread.name.toLowerCase().includes(search.toLowerCase()) || thread.num.includes(search);\r\n            });\r\n            setFiltered(newWishes);\r\n        }\r\n    }, [search]);\r\n\r\n    // Updates search hook with user input\r\n    const handleInputChange = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.buttons} >\r\n                <BackBtn />\r\n                <SearchBox handleInputChange={handleInputChange} />\r\n                <HomeBtn />\r\n            </div>\r\n            <Results threads={filtered} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Wishlist;","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Inventory.js",["93","94","95"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport API from \"../utils/API\";\r\n\r\n// Material UI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Fab, TextField } from \"@material-ui/core\";\r\n\r\n// Utilities and Contextimport \r\nimport ThreadContext from \"../utils/ThreadContext\";\r\n\r\n// Components\r\nimport BackBtn from \"../components/BackBtn\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport HomeBtn from \"../components/HomeBtn\";\r\nimport Results from \"../components/Results\";\r\nimport TabBar from \"../components/TabBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttons: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: 60\r\n    },\r\n    white: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: 4\r\n    },\r\n    topM: {\r\n        marginTop: 7\r\n    }\r\n}));\r\n\r\nfunction Inventory() {\r\n    const { threads } = useContext(ThreadContext);\r\n\r\n    const [favThreads, setFavThreads] = useState([]);\r\n    const [ownedThreads, setOwnedThreads] = useState([]);\r\n    const [active, setActive] = useState({ all: true, fav: false, owned: false });\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [search, setSearch] = useState();\r\n\r\n    const isInitialMount = useRef(true);\r\n\r\n    // Loads favorites/owned and sets to hooks\r\n    useEffect(() => {\r\n        const getThreads = async () => {\r\n            try {\r\n                const favResponse = await API.getFavorites();\r\n                setFavThreads(favResponse.data);\r\n                const ownResponse = await API.getOwned();\r\n                setOwnedThreads(ownResponse.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        getThreads();\r\n    }, []);\r\n\r\n    // Checks for changes on search hook and filters active view\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n        } else {\r\n            const threads = getActive().filter((thread) => {\r\n                return thread.name.toLowerCase().includes(search.toLowerCase()) || thread.num.includes(search);\r\n            });\r\n            setFiltered(threads);\r\n        }\r\n    }, [search]);\r\n\r\n    // Sets all to active\r\n    const setAll = () => {\r\n        setActive({ all: true, fav: false, owned: false });\r\n        setFiltered([]);\r\n    }\r\n\r\n    // Sets favorites to active\r\n    const setFav = () => {\r\n        setActive({ all: false, fav: true, owned: false });\r\n        setFiltered([]);\r\n    }\r\n\r\n    // Sets owned to active\r\n    const setOwned = () => {\r\n        setActive({ all: false, fav: false, owned: true });\r\n        setFiltered([]);\r\n    }\r\n\r\n    // Returns current active view: all/favorites/owned\r\n    const getActive = () => {\r\n        if (active.owned) {\r\n            return ownedThreads;\r\n        } else if (active.fav) {\r\n            return favThreads;\r\n        } else {\r\n            return threads.dmc;\r\n        }\r\n    }\r\n\r\n    // const sortBy = (style) => {\r\n    //     const threads = getActive();\r\n    //     const sorted = threads.sort(a, b) => {\r\n\r\n    // }\r\n    //}\r\n\r\n    // Updates search hook with user input\r\n    const handleInputChange = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.buttons} >\r\n                <BackBtn />\r\n                <SearchBox handleInputChange={handleInputChange} />\r\n                <HomeBtn />\r\n            </div>\r\n\r\n            <Results threads={filtered.length > 0 ? filtered : getActive()} />\r\n\r\n            <TabBar className=\"fixed-bottom\" handleAdd={setAll} handleFav={setFav} handleOwned={setOwned} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Inventory;","C:\\Users\\ryans\\dmc\\client\\src\\pages\\Login.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\pages\\Projects.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\components\\SmThread\\index.js",[],["96","97"],"C:\\Users\\ryans\\dmc\\client\\src\\components\\TabBar\\index.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\pages\\Entry.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\utils\\API.js",["98"],"import axios from \"axios\";\r\n\r\nconst config = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n};\r\n\r\nexport default {\r\n    // Login/User Methods\r\n    loginUser: function (info) {\r\n        return axios.post(\"/api/auth\", info);\r\n    },\r\n    createUser: function (info) {\r\n        return axios.post(\"/api/users\", info);\r\n    },\r\n\r\n    // Caboodle Methods\r\n    createCaboodle: function () {\r\n        return axios.post(\"/api/caboodle\");\r\n    },\r\n\r\n    // Basic Thread Methods\r\n    getOne: function (id) {\r\n        return axios.get(\"/api/caboodle/drawer/\" + id);\r\n    },\r\n    addOne: function (thread) {\r\n        return axios.put(\"/api/caboodle/drawer\", thread);\r\n    },\r\n    deleteOne: function (id) {\r\n        return axios.delete(\"/api/caboodle/drawer/\" + id);\r\n    },\r\n\r\n    // Favorites Methods\r\n    getFavorites: function () {\r\n        return axios.get(\"/api/caboodle/fav\");\r\n    },\r\n\r\n    // Owned Methods\r\n    getOwned: function () {\r\n        return axios.get(\"/api/caboodle/owned\");\r\n    },\r\n\r\n    // Wishlist Methods\r\n    getWishes: function () {\r\n        return axios.get(\"/api/caboodle/wishlist\");\r\n    },\r\n\r\n    // Thread Inventory Methods\r\n    addDMC: function (thread) {\r\n        return axios.post(\"/api/threads/DMC\", thread, config);\r\n    },\r\n    getAllDMC: function () {\r\n        return axios.get(\"/api/threads/DMC\");\r\n    },\r\n    getOneDMC: function (id) {\r\n        return axios.get(\"/api/threads/DMC/\" + id);\r\n    }\r\n}","C:\\Users\\ryans\\dmc\\client\\src\\components\\Results\\index.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\utils\\UserContext.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\utils\\AuthContext.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\utils\\ThreadContext.js",[],"C:\\Users\\ryans\\dmc\\client\\src\\components\\SearchBox\\index.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":154,"column":8,"nodeType":"105","endLine":154,"endColumn":36,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":23},{"ruleId":"103","severity":1,"message":"111","line":60,"column":8,"nodeType":"105","endLine":60,"endColumn":16,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":13},{"ruleId":"107","severity":1,"message":"114","line":6,"column":15,"nodeType":"109","messageId":"110","endLine":6,"endColumn":24},{"ruleId":"103","severity":1,"message":"115","line":69,"column":8,"nodeType":"105","endLine":69,"endColumn":16,"suggestions":"116"},{"ruleId":"99","replacedBy":"117"},{"ruleId":"101","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":9,"column":1,"nodeType":"121","endLine":59,"endColumn":2},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'color.num' and 'setModel'. Either include them or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'SortByAlphaIcon' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'wishes'. Either include it or remove the dependency array.",["125"],"'Fab' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'getActive'. Either include it or remove the dependency array.",["126"],["122"],["123"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [color.count, color.num, color.partial, setModel]",{"range":"133","text":"134"},"Update the dependencies array to be: [search, wishes]",{"range":"135","text":"136"},"Update the dependencies array to be: [getActive, search]",{"range":"137","text":"138"},[4124,4152],"[color.count, color.num, color.partial, setModel]",[1803,1811],"[search, wishes]",[2209,2217],"[getActive, search]"]